version: "3.7"
services:

  mongodb:
    image: mongo
    environment:
      - PUID=1000
      - PGID=1000
    expose:
      - 27017
    networks:
      - app

  jaeger:
    image: jaegertracing/opentelemetry-all-in-one:latest
    expose:
      - 16686
      - 13133
      - 4317
      - 4318
    networks:
      - app
  
  cache:
    image: redis:7.2
    ports:
      - "6379:6379"
    networks:
      - app

  wiremock:
    image: wiremock/wiremock:latest
    expose:
      - 8080
    volumes:
      - ./mocks/recipe-api:/home/wiremock
    networks:
      - app

  wiremock-recipes-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "recipes",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "../../components",
      ]
    volumes:
      - "../../components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "wiremock"
    network_mode: "service:wiremock"

  local.kitchen-api:
    image: kitchen-api
    ports:
      - "5097:8080"
    restart: on-failure
    environment:
      - DatabaseConnection=mongodb://mongodb:27017 
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - Services__Recipes=recipes
      - Auth__Issuer=https://plantbasedpizza.com
      - Auth__Audience=https://plantbasedpizza.com
      - Auth__Key=This is a sample secret key - please don't use in production environment.'
    networks:
      - app

  kitchen-api-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "kitchen",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "../../components",
      ]
    volumes:
      - "../../components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.kitchen-api"
    network_mode: "service:local.kitchen-api"

  local.kitchen-worker:
    image: kitchen-worker
    restart: on-failure
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - Services__Recipes=recipes
    networks:
      - app

  kitchen-worker-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "kitchen-worker",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "../../components",
      ]
    volumes:
      - "../../components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.kitchen-worker"
    network_mode: "service:local.kitchen-worker"
    

  integration-test-dapr:
    image: "daprio/daprd:edge"
    command: [
      "./daprd",
      "--app-id",
      "integration-tests",
      "--placement-host-address",
      "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
      "--dapr-grpc-port",
      "5101",
      "--resources-path",
      "../../components",
    ]
    ports:
      - "5101:5101"
    volumes:
      - "../../components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    networks:
      - app


  ############################
  # Dapr placement service
  ############################
  placement:
    image: "daprio/dapr"
    command: ["./placement", "-port", "50006"]
    ports:
      - "50006:50006"
    networks:
      - app

networks:
  app: