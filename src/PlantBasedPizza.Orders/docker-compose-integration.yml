services:
  local.order-api:
    image: order-api
    container_name: "local.order-api"
    depends_on:
      - cache
      - placement
    ports:
      - "5004:8080"
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - RedisConnectionString=cache
      - Services__Loyalty=loyalty
      - Services__LoyaltyInternal=http://localhost:5101
      - Services__PaymentInternal=http://localhost:5101
      - Services__Recipes=recipes
      - Messaging__UseAsyncApi=Y
      - Auth__Issuer=https://plantbasedpizza.com
      - Auth__Audience=https://plantbasedpizza.com
      - Auth__Key=This is a sample secret key - please don't use in production environment.'
      - Auth__PaymentApiKey=the api key to use, use a secret store in production
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101

  orderapi-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "orders",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.order-api"
    network_mode: "service:local.order-api"

  local.orders-worker:
    image: order-worker
    container_name: local.orders-worker
    depends_on:
      - cache
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - RedisConnectionString=cache
      - Services__Loyalty=loyalty
      - Services__LoyaltyInternal=http://localhost:5101
      - Services__PaymentInternal=http://localhost:5101
      - Services__Recipes=recipes
      - Environment=local
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101

  ordersworker-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "ordersworker",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.orders-worker"
    network_mode: "service:local.orders-worker"
    
  integration-test-dapr:
    image: "daprio/daprd:edge"
    command: [
      "./daprd",
      "--app-id",
      "integration-tests",
      "--placement-host-address",
      "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
      "--dapr-grpc-port",
      "5101",
      "--resources-path",
      "../../components",
    ]
    ports:
      - "5101:5101"
    volumes:
      - "../../components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.

  ############################
  # Dapr placement service
  ############################
  placement:
    image: "daprio/dapr"
    command: ["./placement", "-port", "50006"]
    ports:
      - "50006:50006"