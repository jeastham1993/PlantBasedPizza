// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlantBasedPizza.OrderManager.Infrastructure;

#nullable disable

namespace PlantBasedPizza.OrderManager.Infrastructure.Migrations
{
    [DbContext(typeof(OrderManagerDbContext))]
    [Migration("20250515200635_UpdateRelations")]
    partial class UpdateRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlantBasedPizza.OrderManager.Core.Entities.DeliveryDetails", b =>
                {
                    b.Property<int>("DeliveryDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeliveryDetailsId"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressLine3")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressLine4")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressLine5")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrderIdentifier")
                        .HasColumnType("text");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeliveryDetailsId");

                    b.HasIndex("OrderIdentifier")
                        .IsUnique();

                    b.ToTable("DeliveryDetails");
                });

            modelBuilder.Entity("PlantBasedPizza.OrderManager.Core.Entities.Order", b =>
                {
                    b.Property<string>("OrderIdentifier")
                        .HasColumnType("text");

                    b.Property<bool>("AwaitingCollection")
                        .HasColumnType("boolean");

                    b.Property<string>("CustomerIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("OrderCompletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("OrderSubmittedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrderType")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("OrderIdentifier");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("PlantBasedPizza.OrderManager.Core.Entities.OrderHistory", b =>
                {
                    b.Property<int>("OrderHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderHistoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("HistoryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OrderIdentifier")
                        .HasColumnType("text");

                    b.HasKey("OrderHistoryId");

                    b.HasIndex("OrderIdentifier");

                    b.ToTable("OrderHistory");
                });

            modelBuilder.Entity("PlantBasedPizza.OrderManager.Core.Entities.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderItemId"));

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrderIdentifier")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("RecipeIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderIdentifier");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("PlantBasedPizza.OrderManager.Infrastructure.OutboxItem", b =>
                {
                    b.Property<string>("EventType")
                        .HasColumnType("text");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Failed")
                        .HasColumnType("boolean");

                    b.Property<string>("FailureReason")
                        .HasColumnType("text");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Processed")
                        .HasColumnType("boolean");

                    b.Property<string>("TraceId")
                        .HasColumnType("text");

                    b.HasKey("EventType");

                    b.ToTable("orders_outboxitems", (string)null);
                });

            modelBuilder.Entity("PlantBasedPizza.OrderManager.Core.Entities.DeliveryDetails", b =>
                {
                    b.HasOne("PlantBasedPizza.OrderManager.Core.Entities.Order", null)
                        .WithOne("DeliveryDetails")
                        .HasForeignKey("PlantBasedPizza.OrderManager.Core.Entities.DeliveryDetails", "OrderIdentifier");
                });

            modelBuilder.Entity("PlantBasedPizza.OrderManager.Core.Entities.OrderHistory", b =>
                {
                    b.HasOne("PlantBasedPizza.OrderManager.Core.Entities.Order", null)
                        .WithMany("History")
                        .HasForeignKey("OrderIdentifier")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PlantBasedPizza.OrderManager.Core.Entities.OrderItem", b =>
                {
                    b.HasOne("PlantBasedPizza.OrderManager.Core.Entities.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderIdentifier")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PlantBasedPizza.OrderManager.Core.Entities.Order", b =>
                {
                    b.Navigation("DeliveryDetails");

                    b.Navigation("History");

                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
