// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlantBasedPizza.Recipes.Infrastructure;

#nullable disable

namespace PlantBasedPizza.Recipes.Infrastructure.Migrations
{
    [DbContext(typeof(RecipesDbContext))]
    [Migration("20250516140909_UpdateIngredientRelations")]
    partial class UpdateIngredientRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlantBasedPizza.Recipes.Core.Entities.Ingredient", b =>
                {
                    b.Property<int>("IngredientIdentifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IngredientIdentifier"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("RecipeIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IngredientIdentifier");

                    b.HasIndex("RecipeIdentifier");

                    b.ToTable("Ingredients");

                    b.HasAnnotation("Relational:JsonPropertyName", "ingredients");
                });

            modelBuilder.Entity("PlantBasedPizza.Recipes.Core.Entities.Recipe", b =>
                {
                    b.Property<string>("RecipeIdentifier")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "recipeIdentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "price");

                    b.HasKey("RecipeIdentifier");

                    b.ToTable("recipes", (string)null);
                });

            modelBuilder.Entity("PlantBasedPizza.Recipes.Core.Entities.Ingredient", b =>
                {
                    b.HasOne("PlantBasedPizza.Recipes.Core.Entities.Recipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlantBasedPizza.Recipes.Core.Entities.Recipe", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
