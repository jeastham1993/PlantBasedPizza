version: "3.7"
services:
  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - 27017:27017
    networks:
      - dapr

  jaeger:
    image: jaegertracing/opentelemetry-all-in-one:latest
    ports:
      - 16686:16686
      - 13133:13133
      - 4317:4317
      - 4318:4318
    networks:
      - dapr

  cache:
    image: redis:7.2
    expose:
      - "6379"
    networks:
      - dapr

  postgresql:
    container_name: temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:latest
    networks:
      - dapr
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data

  temporal:
    container_name: temporal
    depends_on:
      - postgresql
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
    image: temporalio/auto-setup:1.25.2
    networks:
      - dapr
    ports:
      - 7233:7233

  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:2.23.0
    networks:
      - dapr
    ports:
      - 8090:8080

  ############################
  # Dapr placement service
  ############################
  placement:
    image: "daprio/dapr"
    command: ["./placement", "-port", "50006"]
    ports:
      - "50006:50006"
    networks:
      - dapr

  local.order-api:
    image: order-api
    container_name: "local.order-api"
    depends_on:
      - cache
      - placement
      - temporal
    ports:
      - "50002:50002"
    networks:
      - dapr
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - REDIS_CONNECTION_STRING=cache:6379
      - CACHE_NAME=orders
      - TEMPORAL_ENDPOINT=temporal:7233
      - Features__UseOrchestrator=true
      - Services__LoyaltyInternal=http://localhost:5101
      - Services__Recipes=recipes
      - Messaging__UseAsyncApi=Y
      - Auth__Issuer=https://plantbasedpizza.com
      - Auth__Audience=https://plantbasedpizza.com
      - Auth__Key=This is a sample secret key - please don't use in production environment.'
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101

  orderapi-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "orders",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.order-api"
    network_mode: "service:local.order-api"

  local.order-internal:
    image: order-internal
    container_name: "local.order-internal"
    depends_on:
      - cache
      - placement
    expose:
      - "8080"
    networks:
      - dapr
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - REDIS_CONNECTION_STRING=cache:6379
      - CACHE_NAME=orders
      - Messaging__UseAsyncApi=Y
      - Auth__Issuer=https://plantbasedpizza.com
      - Auth__Audience=https://plantbasedpizza.com
      - Auth__Key=This is a sample secret key - please don't use in production environment.'
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101

  orderinternal-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "orders-internal",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
        "--app-protocol",
        "grpc",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.order-internal"
    network_mode: "service:local.order-internal"

  local.orders-worker:
    image: order-worker
    container_name: local.orders-worker
    depends_on:
      - cache
      - temporal
    ports:
      - "5090:8080"
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - REDIS_CONNECTION_STRING=cache:6379
      - CACHE_NAME=orders
      - TEMPORAL_ENDPOINT=temporal:7233
      - Features__UseOrchestrator=true
      - Services__LoyaltyInternal=http://localhost:5101
      - Services__Recipes=recipes
      - Environment=local
      - Auth__Issuer=https://plantbasedpizza.com
      - Auth__Audience=https://plantbasedpizza.com
      - Auth__Key=This is a sample secret key - please don't use in production environment.'
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101
    networks:
      - dapr

  ordersworker-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "ordersworker",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.orders-worker"
    network_mode: "service:local.orders-worker"

  local.loyalty-api:
    image: loyalty-api
    container_name: local.loyalty-api
    ports:
      - "5050:8080"
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - Auth__Issuer=https://plantbasedpizza.com
      - Auth__Audience=https://plantbasedpizza.com
      - Auth__Key=This is a sample secret key - please don't use in production environment.'
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101
    networks:
      - dapr

  loyaltyapi-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "loyalty",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.loyalty-api"

    network_mode: "service:local.loyalty-api"

  local.loyalty-internal-api:
    image: loyalty-internal-api
    container_name: local.loyalty-internal-api
    expose:
      - "8080"
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101
    networks:
      - dapr

  loyaltyinternal-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "loyaltyinternal",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
        "--app-protocol",
        "grpc",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.loyalty-internal-api"

    network_mode: "service:local.loyalty-internal-api"

  local.loyalty-worker:
    image: loyalty-worker
    container_name: local.loyalty-worker
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101
    networks:
      - dapr

  loyaltyworker-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "loyaltyworker",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.loyalty-worker"

    network_mode: "service:local.loyalty-worker"

  local.kitchen-api:
    image: kitchen-api
    container_name: local.kitchen-api
    expose:
      - "8080"
    depends_on:
      - cache
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - REDIS_CONNECTION_STRING=cache:6379
      - CACHE_NAME=kitchen
      - Services__Recipes=recipes
      - Auth__Issuer=https://plantbasedpizza.com
      - Auth__Audience=https://plantbasedpizza.com
      - Auth__Key=This is a sample secret key - please don't use in production environment.'
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101
    networks:
      - dapr

  kitchenapi-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "kitchen",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.kitchen-api"

    network_mode: "service:local.kitchen-api"

  local.kitchen-worker:
    image: kitchen-worker
    container_name: local.kitchen-worker
    ports:
      - "8081:8080"
    depends_on:
      - cache
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - REDIS_CONNECTION_STRING=cache:6379
      - CACHE_NAME=kitchen
      - Services__Recipes=recipes
      - Services__OrdersInternal=http://localhost:5101
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101
    networks:
      - dapr

  kitchenworker-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "kitchenworker",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.kitchen-worker"

    network_mode: "service:local.kitchen-worker"

  local.payment-api:
    image: payment-api
    container_name: local.payment-api
    ports:
      - "8095:8080"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - REDIS_CONNECTION_STRING=cache:6379
      - CACHE_NAME=payments
      - Environment=local
      - Services__OrdersInternal=http://localhost:5101
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101
    networks:
      - dapr

  paymentapi-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "payment",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006",
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.payment-api"
    network_mode: "service:local.payment-api"

  local.recipe-api:
    image: recipe-api
    container_name: local.recipe-api
    expose:
      - "8080"
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - Auth__Issuer=https://plantbasedpizza.com
      - Auth__Audience=https://plantbasedpizza.com
      - Auth__Key=This is a sample secret key - please don't use in production environment.'
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101
    networks:
      - dapr

  recipeapi-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "recipes",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.recipe-api"

    network_mode: "service:local.recipe-api"

  local.delivery-api:
    image: delivery-api
    container_name: local.delivery-api
    expose:
      - "8080"
    depends_on:
      - cache
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - Auth__Issuer=https://plantbasedpizza.com
      - Auth__Audience=https://plantbasedpizza.com
      - Auth__Key=This is a sample secret key - please don't use in production environment.'
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101
    networks:
      - dapr

  deliveryapi-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "delivery",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.delivery-api"

    network_mode: "service:local.delivery-api"

  local.delivery-worker:
    image: delivery-worker
    container_name: local.delivery-worker
    depends_on:
      - cache
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101
    networks:
      - dapr

  deliveryworker-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "deliveryworker",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.delivery-worker"

    network_mode: "service:local.delivery-worker"

  local.account-api:
    image: account-api
    container_name: local.account-api
    expose:
      - "8080"
    depends_on:
      - cache
    environment:
      - DatabaseConnection=mongodb://mongodb:27017
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - Environment=local
      - Auth__Issuer=https://plantbasedpizza.com
      - Auth__Audience=https://plantbasedpizza.com
      - Auth__Key=This is a sample secret key - please don't use in production environment.'
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=5101
    networks:
      - dapr

  accountapi-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "--app-id",
        "account",
        "--app-port",
        "8080",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--dapr-grpc-port",
        "5101",
        "--resources-path",
        "./components",
      ]
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - "local.account-api"

    network_mode: "service:local.account-api"

  reverse-proxy:
    image: nginx:latest
    ports:
      - "5051:80"
    networks:
      - dapr
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - "local.delivery-api"
      - "local.order-api"
      - "local.kitchen-api"
      - "local.recipe-api"
      - "local.loyalty-api"
      - "local.account-api"

  integration-test-dapr:
    image: "daprio/daprd:edge"
    command: [
      "./daprd",
      "--app-id",
      "integration-tests",
      "--placement-host-address",
      "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
      "--dapr-grpc-port",
      "5101",
      "--resources-path",
      "./components",
    ]
    ports:
      - "5101:5101"
    volumes:
      - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument
    networks:
      - dapr

networks:
  dapr: null
